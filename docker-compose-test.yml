version: '3.4'

x-mysql: &mysql
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: true
  command: >
    mysqld
    --log-bin=mysql-bin.log
    --server-id 1
    --binlog-format=row
    --gtid_mode=on
    --enforce-gtid-consistency=on

x-mariadb: &mariadb
  environment:
    MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
  command: >
    --server-id=1
    --default-authentication-plugin=mysql_native_password
    --log-bin=master-bin
    --binlog-format=row

services:
  percona-5.7:
    <<: *mysql
    image: percona:5.7
    ports:
      - "3306:3306"

  percona-5.7-ctl:
    <<: *mysql
    image: percona:5.7
    ports:
      - "3307:3306"

  mariadb-10.6:
    <<: *mariadb
    image: mariadb:10.6
    ports:
      - "3308:3306"
    volumes:
      - type: bind
        source: ./.mariadb
        target: /opt/key_file
      - type: bind
        source: ./.mariadb/my.cnf
        target: /etc/mysql/my.cnf

  pymysqlreplication:
    build:
      context: .
      dockerfile: test.Dockerfile
      args:
        BASE_IMAGE: python:3.11-alpine
        MYSQL_5_7: percona-5.7
        MYSQL_5_7_CTL: percona-5.7-ctl

    command:
      - /bin/sh
      - -ce
      - |
        echo "wait mysql server"
        
        while :
        do
          if mysql -h percona-5.7 --user=root --execute "USE pymysqlreplication_test;" 2>&1 >/dev/null && mysql -h percona-5.7-ctl --port=3307  --user=root --execute "USE pymysqlreplication_test;" 2>&1 >/dev/null; then
            break
          fi
          sleep 1
        done
        
        echo "run pytest"
        pytest -k "not test_no_trailing_rotate_event and not test_end_log_pos"

    working_dir: /pymysqlreplication
    networks:
      - default
    depends_on:
      - percona-5.7
      - percona-5.7-ctl

networks:
  default: {}
